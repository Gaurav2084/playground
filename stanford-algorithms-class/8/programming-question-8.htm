<!DOCTYPE html>
<!-- saved from url=(0076)https://class.coursera.org/algo2-2012-001/quiz/feedback?submission_id=148751 -->
<html lang="en-US" class="wf-crimsontext-n4-active wf-active"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta charset="utf-8">
<title>Quiz Feedback | Algorithms: Design and Analysis, Part 2</title>
<link rel="stylesheet" href="https://dt5zaw6a98blc.cloudfront.net/site-static/fabe9e3e3144b16d861020c33071fb7ecd990c3d/css/spark.main.css">


<link rel="icon" href="https://spark-public.s3.amazonaws.com/algo2/static/images/favicon.ico">

<script type="text/javascript" src="./programming-assignments-8_files/MathJax.js"></script><link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Crimson+Text:400&subset=latin"><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1em; bottom: 1.5em; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 2px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 2px 2em; background: transparent}
.MathJax_MenuTitle {background-color: #CCCCCC; margin: -1px -1px 1px -1px; text-align: center; font-style: italic; font-size: 80%; color: #444444; padding: 2px 0; overflow: hidden}
.MathJax_MenuArrow {position: absolute; right: .5em; color: #666666}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuRadioCheck {position: absolute; left: 1em}
.MathJax_MenuLabel {padding: 2px 2em 4px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #CCCCCC; margin: 4px 1px 0px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: Highlight; color: HighlightText}
.MathJax_Menu_Close {position: absolute; width: 31px; height: 31px; top: -15px; left: -15px}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style></head>
<h2>
Feedback — Programming Assignment #3</h2>


<p class="course-quiz-feedback">You submitted this quiz on <strong>Sat  5 Jan 2013  5:15 PM EET</strong>. You got a score of <strong>5.00</strong> out of <strong>5.00</strong>. </p>
<form method="post" id="quiz_form">
<div class="course-quiz-question-body">
<h3 class="course-quiz-question-number">Question 1</h3>
<div style="float:none;text-align:left;width:100%"> <div class="course-quiz-question-text">In this programming problem and the next you'll code up the knapsack algorithm from lecture.
Let's start with a warm-up.  Download the text file <a href="http://spark-public.s3.amazonaws.com/algo2/datasets/knapsack1.txt">here</a>. This file describes a knapsack instance, and it has the following format:<br>
[knapsack_size][number_of_items]<br>
[value_1] [weight_1]<br>
[value_2] [weight_2]<br>
...<br>
For example, the third line of the file is "50074 659", indicating that the second item has value 50074 and size 659, respectively.
<p>
You can assume that all numbers are positive.  You should assume that item weights and the knapsack capacity are integers.
</p>
<p>
In the box below, type in the value of the optimal solution.
</p>
<p>
ADVICE: If you're not getting the correct answer, try debugging your algorithm using some small test cases. And then post them to the discussion forum!</p>
</div>
</div>
<label for="gensym_50e843ad7ec99" class="hidden">Answer for Question 1</label><div class="course-quiz-options"></div>
<div style="padding:5px">
<strong>You entered:</strong>
</div>
<textarea id="gensym_50e843ad7ec99" class="course-quiz-input" name="answer[2a3342c2f035e075880941798953e303][answer]" readonly="">2493893</textarea><table class="table">
<tbody><tr>
<th>Your Answer</th>
<th></th>
<th>Score</th>
<th>Explanation</th>
</tr>
<tr>
<td class="course-quiz-student-answer">2493893</td>
<td class="course-quiz-answer-correct" title="Correct" alt="Correct">✔</td>
<td>1.00</td>
<td></td>
</tr>
<tr>
<td>Total</td>
<td></td>
<td>1.00 / 1.00</td>
<td></td>
</tr>
</tbody></table>
</div><div class="course-quiz-question-body">
<h3 class="course-quiz-question-number">Question 2</h3>
<div style="float:none;text-align:left;width:100%"> <div class="course-quiz-question-text">This problem also asks you to solve a knapsack instance, but a much bigger one. 
<p>
Download the text file <a href="http://spark-public.s3.amazonaws.com/algo2/datasets/knapsack2.txt">here</a>. This file describes a knapsack instance, and it has the following format:<br>
[knapsack_size][number_of_items]<br>
[value_1] [weight_1]<br>
[value_2] [weight_2]<br>
...<br>
For example, the third line of the file is "50074 834558", indicating that the second item has value 50074 and size 834558, respectively.  As before, you should assume that item weights and the knapsack capacity are integers.
</p>
<p>
This instance is so big that the straightforward iterative implemetation uses an infeasible amount of time and space.  So you will have to be creative to compute an optimal solution.  One idea is to go back to a recursive implementation, solving subproblems --- and, of course, caching the results to avoid redundant work --- only on an "as needed" basis.  Also, be sure to think about appropriate data structures for storing and looking up solutions to subproblems.
</p>
<p>
In the box below, type in the value of the optimal solution.
</p>
<p>
ADVICE: If you're not getting the correct answer, try debugging your algorithm using some small test cases. And then post them to the discussion forum!</p>
</div>
</div>
<label for="gensym_50e843ad8280d" class="hidden">Answer for Question 2</label><div class="course-quiz-options"></div>
<div style="padding:5px">
<strong>You entered:</strong>
</div>
<textarea id="gensym_50e843ad8280d" class="course-quiz-input" name="answer[b1e0fecf429d811c63991c2e1cf58097][answer]" readonly="">2595819</textarea><table class="table">
<tbody><tr>
<th>Your Answer</th>
<th></th>
<th>Score</th>
<th>Explanation</th>
</tr>
<tr>
<td class="course-quiz-student-answer">2595819</td>
<td class="course-quiz-answer-correct" title="Correct" alt="Correct">✔</td>
<td>4.00</td>
<td></td>
</tr>
<tr>
<td>Total</td>
<td></td>
<td>4.00 / 4.00</td>
<td></td>
</tr>
</tbody></table>
</div>    <div class="course-quiz-submit-button-container">
        </div>

</form>

            </div>
        </div>
    </div>
        
        <script src="./programming-assignments-8_files/webfont.js" type="text/javascript" async=""></script><script type="text/javascript" async="" src="./programming-assignments-8_files/204.min.js"></script><script type="text/javascript" async="" src="./programming-assignments-8_files/ga.js"></script><script src="./programming-assignments-8_files/spark.js"></script>
    
    <script src="./programming-assignments-8_files/profiles.js" type="text/javascript"></script>
    <script src="./programming-assignments-8_files/modal_focus.js" type="text/javascript"></script>
    <script src="./programming-assignments-8_files/get_query_parameters.js" type="text/javascript"></script>
    <script src="./programming-assignments-8_files/item_list.js" type="text/javascript"></script>
    <script src="./programming-assignments-8_files/navbar.js" type="text/javascript"></script>

    
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-28377374-1']);
  _gaq.push(['_setDomainName', 'coursera.org']);
  _gaq.push(['_setAllowLinker', true]);  
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

  window._204 = window._204 || [];
  window._204.push({key:"pageview", val:{}});

  (function()
  {
    var a = document.createElement('script'); a.type = 'text/javascript'; a.async = true;
    a.src = 'https://eventing.coursera.org/204.min.js?client=spark&user=123834';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(a, s);
  })();

</script>

    <script type="text/x-mathjax-config;executed=true">
MathJax.Hub.Config({
  config: ["MMLorHTML.js"],
  
  styleSheets: [],
  styles: {},

  jax: ["input/TeX"],
  
  extensions: ["tex2jax.js"],

  preJax: null,
  postJax: null,

  preRemoveClass: "MathJax_Preview",

  showProcessingMessages: true,

  messageStyle: "none",
  
  displayAlign: "center",
  displayIndent: "0em",
  
  delayStartupUntil: "none",

  skipStartupTypeset: false,
  
  elements: [],
  
  tex2jax: {
	    inlineMath: [
	                 ['$$','$$'],      // uncomment this for standard TeX math delimiters
	                 ['\\(','\\)']
	                 ],

	                 displayMath: [
	                 ['\\[','\\]']
	                 ],

    skipTags: ["script","noscript","style","textarea","pre","code"],
    ignoreClass: "tex2jax_ignore",
    processClass: "tex2jax_process",
    processEscapes: false,
    processEnvironments: true,
    preview: "TeX"
    
  },
  
  mml2jax: {
    preview: "alttext"
    
  },
  
  jsMath2jax: {
    preview: "TeX"
    
  },

  TeX: {
    TagSide: "right",
    TagIndent: ".8em",
    MultLineWidth: "85%",
    Macros: {},

    extensions: ["AMSmath.js", "AMSsymbols.js"]
    
  },

  //============================================================================
  //
  //  These parameters control the MathML inupt jax.
  //
  MathML: {
    //
    //  This specifies whether to use TeX spacing or MathML spacing when the
    //  HTML-CSS output jax is used.
    //
    useMathMLspacing: false
  },
  
  //============================================================================
  //
  //  These parameters control the HTML-CSS output jax.
  //
  "HTML-CSS": {
    
    scale: 100,
    
    availableFonts: ["STIX","TeX"],
    
    preferredFont: "TeX",
    
    webFont: "TeX",
    
    imageFont: "TeX",
    
    undefinedFamily: "STIXGeneral,'Arial Unicode MS',serif",
      
    showMathMenu: true,

    styles: {},
    
    tooltip: {
      delayPost: 600,          // milliseconds delay before tooltip is posted after mouseover
      delayClear: 600,         // milliseconds delay before tooltip is cleared after mouseout
      offsetX: 10, offsetY: 5  // pixels to offset tooltip from mouse position
    }
  },
  
  //============================================================================
  //
  //  These parameters control the NativeMML output jax.
  //
  NativeMML: {

    scale: 100,

    showMathMenu: true,
    showMathMenuMSIE: true,

    styles: {}
  },
  
  MathMenu: {
    delay: 400,
    
    helpURL: "http://www.mathjax.org/help/user/",

    showRenderer: true,
    showFontMenu: false,
    showContext:  false,

    windowSettings: {
      status: "no", toolbar: "no", locationbar: "no", menubar: "no",
      directories: "no", personalbar: "no", resizable: "yes", scrollbars: "yes",
      width: 100, height: 50
    },
    
    styles: {}
    
  },

  MMLorHTML: {
    prefer: {
      MSIE:    "MML",
      Firefox: "MML",
      Opera:   "HTML",
      other:   "HTML"
    }
  }
});
</script>
<script type="text/javascript">
(function () {

  function loadMathJax() {
    var script = document.createElement("script");
    script.type = "text/javascript";
    script.src  = "https://d2265nx4vomwra.cloudfront.net/2.1/MathJax.js";
    document.getElementsByTagName("head")[0].appendChild(script);
  }

  window.loadOrRefreshMathJax = function(domId) {
    if (window.MathJax) {
      if (domId) {
        MathJax.Hub.Queue(["Typeset", MathJax.Hub, domId]);
      } else {
        MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
      }
    } else {
      loadMathJax();
    }
  }
})();
</script>
            <div id="stanford_footer" style="display: none; background-color: rgb(140, 21, 21); width: 100%; height: 40px; position: absolute; top: 1679px;">
            <div style="float:right;color:white;padding-top:10px;padding-right:12px;font-size:11px;">© Stanford University, Stanford, California 94305</div>
            <div style="padding-top:9px;padding-left:12px;font-family:&#39;Crimson Text&#39;, serif;font-size:20px;color:white;font-weight:600;">Stanford University</div>
        </div>

        <script type="text/javascript">

            WebFontConfig = {
                google: { families: [ 'Crimson+Text:400:latin' ] }
            };

            (function() {
                var wf = document.createElement('script');
                wf.src = ('https:' == document.location.protocol ? 'https' : 'http') + '://ajax.googleapis.com/ajax/libs/webfont/1/webfont.js';
                wf.type = 'text/javascript';
                wf.async = 'true';
                var s = document.getElementsByTagName('script')[0];
                s.parentNode.insertBefore(wf, s);
            })();

            $(function(){
                //$('#stanford_footer').show();
                $('#stanford_footer').css({'position': 'absolute', 'top': $(document).height() + 'px'});
            });
        </script>
    
    <script type="text/javascript">
        function hideMaintenanceMessage() {
            $('#maintenance_message').hide();
            document.cookie = "spark_maintmsghide_2=1;expires=0;path=/;";
        }
    </script>

<script src="./programming-assignments-8_files/quiz_timer.js"></script>
<script src="./programming-assignments-8_files/get_query_parameters(1).js"></script>
<script src="./programming-assignments-8_files/quiz_attempt.js"></script>
<script src="./programming-assignments-8_files/latex_preview.js"></script>
<script src="./programming-assignments-8_files/db_class.js"></script>
<script>initRunQuery(".test_query", "run_query");</script>
<script type="text/javascript">$(function() { loadOrRefreshMathJax();})</script>




</body></html>